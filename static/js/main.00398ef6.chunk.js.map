{"version":3,"sources":["components/Header.js","components/Type.js","components/Card.js","components/cardIcons/c.svg","components/cardIcons/ch.svg","components/cardIcons/cpp.svg","components/cardIcons/css.svg","components/cardIcons/go.svg","components/cardIcons/haskell.svg","components/cardIcons/html.svg","components/cardIcons/java.svg","components/cardIcons/js.svg","components/cardIcons/matlab.svg","components/cardIcons/node.svg","components/cardIcons/php.svg","components/cardIcons/python.svg","components/cardIcons/react.svg","components/cardIcons/ruby.svg","components/cardIcons/ts.svg","components/Game.js","App.js","index.js"],"names":["Header","className","Type","onInit","typewriter","changeDelay","typeString","pauseFor","deleteAll","start","Card","svgSrc","svgText","handleClick","onClick","src","alt","Game","useState","Clang","text","java","matlab","cpp","go","ch","css","html","python","php","node","ruby","js","react","ts","haskell","gameObj","setGameObj","currentLevel","setCurrentLevel","clickedArr","setClickedArr","shuffleGameLevel","levelCopy","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","gameObjCopy","useEffect","resetClickedArr","checkRepeat","arrClone","push","resetGame","found","forEach","item","console","log","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00398ef6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    let score = 5;\r\n    let best = 6;\r\n    return (\r\n        <div className=\"flex items-center justify-between px-7 py-4 w-full bg-gray-900 border-b bg-opacity-80 blur border-gray-100 border-opacity-10\">\r\n            <div className=\"\">\r\n                <span className=\"sm:text-xl md:text-4xl font-semibold text-gray-200\">Memory Card</span>\r\n            </div>\r\n            \r\n            <div className=\"md:text-xl text-gray-200\">\r\n                <span>{`Score: ${score} |`}</span>\r\n                <span>{` Best: ${best}`}</span>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\n\r\nconst Type = () => {\r\n    return (\r\n        <div className=\"text-center sm:text-lg md:text-xl lg:text-2xl text-green-500 font-mono py-4 px-7 font-semibold\">\r\n            <Typewriter\r\n                onInit={(typewriter) => {\r\n                    typewriter\r\n                        .changeDelay(70)\r\n                        .typeString(\"Put your memory to the test \")\r\n                        .pauseFor(500)\r\n                        .deleteAll()\r\n                        \r\n                        .typeString(\r\n                            \"Click on a card but not more than once!\"\r\n                        )\r\n                        .start();\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Type;\r\n","const Card = ({ svgSrc, svgText, handleClick }) => {\r\n    return (\r\n        <div\r\n            className=\"rounded-lg flex flex-col space-y-2 justify-center items-center cursor-pointer p-4 bg-gray-600 md:w-44 md:h-52 mx-4 my-2 border-t border-l border-opacity-20 bg-opacity-30 blur-xl shadow-lg transform ease-in duration-200 hover:scale-105\"\r\n            onClick={() => handleClick(svgText)}\r\n        >\r\n            <div className=\"p-4\">\r\n                <img src={svgSrc} className=\"\" alt=\"\" />\r\n            </div>\r\n            <span className=\"text-gray-200 text-lg font-semibold \">\r\n                {svgText}\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/c.0316787c.svg\";","export default __webpack_public_path__ + \"static/media/ch.c2e1e9b9.svg\";","export default __webpack_public_path__ + \"static/media/cpp.bd9fc7e8.svg\";","export default __webpack_public_path__ + \"static/media/css.0b24b108.svg\";","export default __webpack_public_path__ + \"static/media/go.40c6002e.svg\";","export default __webpack_public_path__ + \"static/media/haskell.3b6e206d.svg\";","export default __webpack_public_path__ + \"static/media/html.0e2d7499.svg\";","export default __webpack_public_path__ + \"static/media/java.58ba969b.svg\";","export default __webpack_public_path__ + \"static/media/js.a940676b.svg\";","export default __webpack_public_path__ + \"static/media/matlab.52a7ce72.svg\";","export default __webpack_public_path__ + \"static/media/node.8710f73b.svg\";","export default __webpack_public_path__ + \"static/media/php.1be1c09f.svg\";","export default __webpack_public_path__ + \"static/media/python.65ff7863.svg\";","export default __webpack_public_path__ + \"static/media/react.429a3c6c.svg\";","export default __webpack_public_path__ + \"static/media/ruby.c4aae4c6.svg\";","export default __webpack_public_path__ + \"static/media/ts.900d540f.svg\";","import { useState, useEffect } from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nimport Clang from \"./cardIcons/c.svg\";\r\nimport ch from \"./cardIcons/ch.svg\";\r\nimport cpp from \"./cardIcons/cpp.svg\";\r\nimport css from \"./cardIcons/css.svg\";\r\nimport go from \"./cardIcons/go.svg\";\r\nimport haskell from \"./cardIcons/haskell.svg\";\r\nimport html from \"./cardIcons/html.svg\";\r\nimport java from \"./cardIcons/java.svg\";\r\nimport js from \"./cardIcons/js.svg\";\r\nimport matlab from \"./cardIcons/matlab.svg\";\r\nimport node from \"./cardIcons/node.svg\";\r\nimport php from \"./cardIcons/php.svg\";\r\nimport python from \"./cardIcons/python.svg\";\r\nimport react from \"./cardIcons/react.svg\";\r\nimport ruby from \"./cardIcons/ruby.svg\";\r\nimport ts from \"./cardIcons/ts.svg\";\r\n\r\n// let gameObj = {\r\n//     1: [\r\n//         { src: Clang, text: \"C\" },\r\n//         { src: java, text: \"Java\" },\r\n//         { src: matlab, text: \"Matlab\" },\r\n//         { src: cpp, text: \"C++\" },\r\n//     ],\r\n//     2: [\r\n//         { src: go, text: \"Go\" },\r\n//         { src: ch, text: \"C#\" },\r\n//         { src: css, text: \"CSS\" },\r\n//         { src: html, text: \"HTML\" },\r\n//         { src: python, text: \"Python\" },\r\n//         { src: php, text: \"PHP\" },\r\n//     ],\r\n//     3: [\r\n//         { src: css, text: \"CSS\" },\r\n//         { src: node, text: \"NodeJS\" },\r\n//         { src: ruby, text: \"Ruby\" },\r\n//         { src: go, text: \"Go\" },\r\n//         { src: html, text: \"HTML\" },\r\n//         { src: php, text: \"PHP\" },\r\n//         { src: python, text: \"Python\" },\r\n//         { src: ch, text: \"C#\" },\r\n//     ],\r\n//     4: [\r\n//         { src: js, text: \"JavaScript\" },\r\n//         { src: ch, text: \"C#\" },\r\n//         { src: html, text: \"HTML\" },\r\n//         { src: php, text: \"PHP\" },\r\n//         { src: python, text: \"Python\" },\r\n//         { src: react, text: \"React\" },\r\n//         { src: node, text: \"NodeJS\" },\r\n//         { src: go, text: \"Go\" },\r\n//         { src: ts, text: \"TypeScript\" },\r\n//         { src: haskell, text: \"Haskell\" },\r\n//         { src: ruby, text: \"Ruby\" },\r\n//         { src: css, text: \"CSS\" },\r\n//     ],\r\n// };\r\n\r\nconst Game = () => {\r\n    let [gameObj, setGameObj] = useState([\r\n        [\r\n            { src: Clang, text: \"C\" },\r\n            { src: java, text: \"Java\" },\r\n            { src: matlab, text: \"Matlab\" },\r\n            { src: cpp, text: \"C++\" },\r\n        ],\r\n        [\r\n            { src: go, text: \"Go\" },\r\n            { src: ch, text: \"C#\" },\r\n            { src: css, text: \"CSS\" },\r\n            { src: html, text: \"HTML\" },\r\n            { src: python, text: \"Python\" },\r\n            { src: php, text: \"PHP\" },\r\n        ],\r\n        [\r\n            { src: css, text: \"CSS\" },\r\n            { src: node, text: \"NodeJS\" },\r\n            { src: ruby, text: \"Ruby\" },\r\n            { src: go, text: \"Go\" },\r\n            { src: html, text: \"HTML\" },\r\n            { src: php, text: \"PHP\" },\r\n            { src: python, text: \"Python\" },\r\n            { src: ch, text: \"C#\" },\r\n        ],\r\n        [\r\n            { src: js, text: \"JavaScript\" },\r\n            { src: ch, text: \"C#\" },\r\n            { src: html, text: \"HTML\" },\r\n            { src: php, text: \"PHP\" },\r\n            { src: python, text: \"Python\" },\r\n            { src: react, text: \"React\" },\r\n            { src: node, text: \"NodeJS\" },\r\n            { src: go, text: \"Go\" },\r\n            { src: ts, text: \"TypeScript\" },\r\n            { src: haskell, text: \"Haskell\" },\r\n            { src: ruby, text: \"Ruby\" },\r\n            { src: css, text: \"CSS\" },\r\n        ],\r\n    ]);\r\n    let [currentLevel, setCurrentLevel] = useState(0);\r\n    let [clickedArr, setClickedArr] = useState([]);\r\n\r\n    const shuffle = (array) => {\r\n        // Fisher-Yates (aka Knuth) Shuffle\r\n        var currentIndex = array.length,\r\n            randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (currentIndex !== 0) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n\r\n            // And swap it with the current element.\r\n            [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex],\r\n                array[currentIndex],\r\n            ];\r\n        }\r\n\r\n        return array;\r\n    };\r\n\r\n    const shuffleGameLevel = () => {\r\n        let levelCopy = [...gameObj[currentLevel]];\r\n        //console.log(levelCopy)\r\n        levelCopy = shuffle(levelCopy);\r\n        //console.log(levelCopy)\r\n        //setGameObj({ ...gameObj, currentLevel: levelCopy });\r\n        // setGameObj((prevObj) => ({\r\n        //     ...prevObj,\r\n        //     currentLevel: levelCopy,\r\n        // }));\r\n        let gameObjCopy = [...gameObj];\r\n        gameObjCopy[currentLevel] = levelCopy;\r\n        setGameObj(gameObjCopy);\r\n\r\n        //console.log(gameObj[currentLevel]);\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     let levelCopy = [...gameObj[currentLevel]];\r\n    //     //console.log(levelCopy)\r\n    //     levelCopy = shuffle(levelCopy);\r\n    //     setGameObj((prevObj) => ({\r\n    //         ...prevObj,\r\n    //         currentLevel: levelCopy,\r\n    //     }));\r\n    // }, [clickedArr]);\r\n    useEffect(() => {\r\n        if (clickedArr.length === gameObj[currentLevel].length) {\r\n            setCurrentLevel(currentLevel + 1);\r\n            resetClickedArr();\r\n        }\r\n    }, [clickedArr]);\r\n\r\n    const handleClick = (text) => {\r\n        if (checkRepeat(text) === false) {\r\n            let arrClone = [...clickedArr];\r\n            arrClone.push(text);\r\n            setClickedArr(arrClone);\r\n            shuffleGameLevel();\r\n        } else {\r\n            resetGame();\r\n        }\r\n    };\r\n\r\n    const resetClickedArr = () => {\r\n        setClickedArr([]);\r\n    };\r\n\r\n    const checkRepeat = (text) => {\r\n        //return true if the card text already exsits in the clickedArr\r\n        let found = false;\r\n\r\n        clickedArr.forEach((item) => {\r\n            //console.log(item);\r\n            //console.log(item, text)\r\n            if (item === text) {\r\n                console.log(true);\r\n                found = true;\r\n            }\r\n        });\r\n        return found;\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setCurrentLevel(0);\r\n        resetClickedArr();\r\n    };\r\n\r\n    return (\r\n        <div className=\"px-8 py-6 flex justify-center items-center flex-wrap w-full\">\r\n            {gameObj[currentLevel].map((item) => (\r\n                <Card\r\n                    svgSrc={item.src}\r\n                    svgText={item.text}\r\n                    handleClick={handleClick}\r\n                ></Card>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;\r\n","import Header from \"./components/Header\";\n//import Card from \"./components/Card\";\nimport Type from \"./components/Type\";\nimport Game from \"./components/Game\";\n\nfunction App() {\n    return (\n        <div className=\"bg-gray-900 h-screen bg-hero-pattern bg-no-repeat bg-cover\">\n            <Header></Header>\n            <Type></Type>\n            {/* <Card></Card> */}\n            <Game></Game>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}